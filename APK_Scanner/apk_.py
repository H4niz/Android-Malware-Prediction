from pyaxmlparser import APK
import csv
import os, sys
import shutil
#-*- coding: utf-8 -*-


full_features = {'ACCESS_ALL_DOWNLOADS': 0, 'ACCESS_BLUETOOTH_SHARE': 1, 'ACCESS_CACHE_FILESYSTEM': 2, 'ACCESS_CHECKIN_PROPERTIES': 3, 'ACCESS_CONTENT_PROVIDERS_EXTERNALLY': 4, 'ACCESS_DOWNLOAD_MANAGER': 5, 'ACCESS_DOWNLOAD_MANAGER_ADVANCED': 6, 'ACCESS_DRM_CERTIFICATES': 7, 'ACCESS_EPHEMERAL_APPS': 8, 'ACCESS_FM_RADIO': 9, 'ACCESS_INPUT_FLINGER': 10, 'ACCESS_KEYGUARD_SECURE_STORAGE': 11, 'ACCESS_LOCATION_EXTRA_COMMANDS': 12, 'ACCESS_MOCK_LOCATION': 13, 'ACCESS_MTP': 14, 'ACCESS_NETWORK_CONDITIONS': 15, 'ACCESS_NETWORK_STATE': 16, 'ACCESS_NOTIFICATIONS': 17, 'ACCESS_NOTIFICATION_POLICY': 18, 'ACCESS_PDB_STATE': 19, 'ACCESS_SURFACE_FLINGER': 20, 'ACCESS_VOICE_INTERACTION_SERVICE': 21, 'ACCESS_VR_MANAGER': 22, 'ACCESS_WIFI_STATE': 23, 'ACCESS_WIMAX_STATE': 24, 'ACCOUNT_MANAGER': 25, 'ALLOW_ANY_CODEC_FOR_PLAYBACK': 26, 'ASEC_ACCESS': 27, 'ASEC_CREATE': 28, 'ASEC_DESTROY': 29, 'ASEC_MOUNT_UNMOUNT': 30, 'ASEC_RENAME': 31, 'AUTHENTICATE_ACCOUNTS': 32, 'BACKUP': 33, 'BATTERY_STATS': 34, 'BIND_ACCESSIBILITY_SERVICE': 35, 'BIND_APPWIDGET': 36, 'BIND_CARRIER_MESSAGING_SERVICE': 37, 'BIND_CARRIER_SERVICES': 38, 'BIND_CHOOSER_TARGET_SERVICE': 39, 'BIND_CONDITION_PROVIDER_SERVICE': 40, 'BIND_CONNECTION_SERVICE': 41, 'BIND_DEVICE_ADMIN': 42, 'BIND_DIRECTORY_SEARCH': 43, 'BIND_DREAM_SERVICE': 44, 'BIND_INCALL_SERVICE': 45, 'BIND_INPUT_METHOD': 46, 'BIND_INTENT_FILTER_VERIFIER': 47, 'BIND_JOB_SERVICE': 48, 'BIND_KEYGUARD_APPWIDGET': 49, 'BIND_MIDI_DEVICE_SERVICE': 50, 'BIND_NFC_SERVICE': 51, 'BIND_NOTIFICATION_LISTENER_SERVICE': 52, 'BIND_NOTIFICATION_RANKER_SERVICE': 53, 'BIND_PACKAGE_VERIFIER': 54, 'BIND_PRINT_RECOMMENDATION_SERVICE': 55, 'BIND_PRINT_SERVICE': 56, 'BIND_PRINT_SPOOLER_SERVICE': 57, 'BIND_QUICK_SETTINGS_TILE': 58, 'BIND_REMOTEVIEWS': 59, 'BIND_REMOTE_DISPLAY': 60, 'BIND_ROUTE_PROVIDER': 61, 'BIND_RUNTIME_PERMISSION_PRESENTER_SERVICE': 62, 'BIND_SCREENING_SERVICE': 63, 'BIND_TELECOM_CONNECTION_SERVICE': 64, 'BIND_TEXT_SERVICE': 65, 'BIND_TRUST_AGENT': 66, 'BIND_TV_INPUT': 67, 'BIND_TV_REMOTE_SERVICE': 68, 'BIND_VOICE_INTERACTION': 69, 'BIND_VPN_SERVICE': 70, 'BIND_VR_LISTENER_SERVICE': 71, 'BIND_WALLPAPER': 72, 'BLUETOOTH': 73, 'BLUETOOTH_ADMIN': 74, 'BLUETOOTH_MAP': 75, 'BLUETOOTH_PRIVILEGED': 76, 'BLUETOOTH_STACK': 77, 'BRICK': 78, 'BROADCAST_CALLLOG_INFO': 79, 'BROADCAST_NETWORK_PRIVILEGED': 80, 'BROADCAST_PACKAGE_REMOVED': 81, 'BROADCAST_PHONE_ACCOUNT_REGISTRATION': 82, 'BROADCAST_SMS': 83, 'BROADCAST_STICKY': 84, 'BROADCAST_WAP_PUSH': 85, 'CACHE_CONTENT': 86, 'CALL_PRIVILEGED': 87, 'CAMERA_DISABLE_TRANSMIT_LED': 88, 'CAMERA_SEND_SYSTEM_EVENTS': 89, 'CAPTURE_AUDIO_HOTWORD': 90, 'CAPTURE_AUDIO_OUTPUT': 91, 'CAPTURE_SECURE_VIDEO_OUTPUT': 92, 'CAPTURE_TV_INPUT': 93, 'CAPTURE_VIDEO_OUTPUT': 94, 'CARRIER_FILTER_SMS': 95, 'CHANGE_APP_IDLE_STATE': 96, 'CHANGE_BACKGROUND_DATA_SETTING': 97, 'CHANGE_COMPONENT_ENABLED_STATE': 98, 'CHANGE_CONFIGURATION': 99, 'CHANGE_DEVICE_IDLE_TEMP_WHITELIST': 100, 'CHANGE_NETWORK_STATE': 101, 'CHANGE_WIFI_MULTICAST_STATE': 102, 'CHANGE_WIFI_STATE': 103, 'CHANGE_WIMAX_STATE': 104, 'CLEAR_APP_CACHE': 105, 'CLEAR_APP_GRANTED_URI_PERMISSIONS': 106, 'CLEAR_APP_USER_DATA': 107, 'CONFIGURE_DISPLAY_COLOR_TRANSFORM': 108, 'CONFIGURE_WIFI_DISPLAY': 109, 'CONFIRM_FULL_BACKUP': 110, 'CONNECTIVITY_INTERNAL': 111, 'CONTROL_INCALL_EXPERIENCE': 112, 'CONTROL_KEYGUARD': 113, 'CONTROL_LOCATION_UPDATES': 114, 'CONTROL_VPN': 115, 'CONTROL_WIFI_DISPLAY': 116, 'COPY_PROTECTED_DATA': 117, 'CREATE_USERS': 118, 'CRYPT_KEEPER': 119, 'DELETE_CACHE_FILES': 120, 'DELETE_PACKAGES': 121, 'DEVICE_POWER': 122, 'DIAGNOSTIC': 123, 'DISABLE_KEYGUARD': 124, 'DISPATCH_NFC_MESSAGE': 125, 'DISPATCH_PROVISIONING_MESSAGE': 126, 'DOWNLOAD_CACHE_NON_PURGEABLE': 127, 'DUMP': 128, 'DVB_DEVICE': 129, 'EXPAND_STATUS_BAR': 130, 'FACTORY_TEST': 131, 'FILTER_EVENTS': 132, 'FLASHLIGHT': 133, 'FORCE_BACK': 134, 'FORCE_STOP_PACKAGES': 135, 'FRAME_STATS': 136, 'FREEZE_SCREEN': 137, 'GET_ACCOUNTS_PRIVILEGED': 138, 'GET_APP_GRANTED_URI_PERMISSIONS': 139, 'GET_APP_OPS_STATS': 140, 'GET_DETAILED_TASKS': 141, 'GET_INTENT_SENDER_INTENT': 142, 'GET_PACKAGE_IMPORTANCE': 143, 'GET_PACKAGE_SIZE': 144, 'GET_PASSWORD': 145, 'GET_PROCESS_STATE_AND_OOM_SCORE': 146, 'GET_TASKS': 147, 'GET_TOP_ACTIVITY_INFO': 148, 'GLOBAL_SEARCH': 149, 'GLOBAL_SEARCH_CONTROL': 150, 'GRANT_RUNTIME_PERMISSIONS': 151, 'HARDWARE_TEST': 152, 'HDMI_CEC': 153, 'INJECT_EVENTS': 154, 'INSTALL_GRANT_RUNTIME_PERMISSIONS': 155, 'INSTALL_LOCATION_PROVIDER': 156, 'INSTALL_PACKAGES': 157, 'INTENT_FILTER_VERIFICATION_AGENT': 158, 'INTERACT_ACROSS_USERS': 159, 'INTERACT_ACROSS_USERS_FULL': 160, 'INTERNAL_SYSTEM_WINDOW': 161, 'INTERNET': 162, 'INVOKE_CARRIER_SETUP': 163, 'KILL_BACKGROUND_PROCESSES': 164, 'KILL_UID': 165, 'LAUNCH_TRUST_AGENT_SETTINGS': 166, 'LOCAL_MAC_ADDRESS': 167, 'LOCATION_HARDWARE': 168, 'LOOP_RADIO': 169, 'MANAGE_ACCOUNTS': 170, 'MANAGE_ACTIVITY_STACKS': 171, 'MANAGE_APP_OPS_RESTRICTIONS': 172, 'MANAGE_APP_TOKENS': 173, 'MANAGE_CA_CERTIFICATES': 174, 'MANAGE_DEVICE_ADMINS': 175, 'MANAGE_DOCUMENTS': 176, 'MANAGE_FINGERPRINT': 177, 'MANAGE_MEDIA_PROJECTION': 178, 'MANAGE_NETWORK_POLICY': 179, 'MANAGE_NOTIFICATIONS': 180, 'MANAGE_PROFILE_AND_DEVICE_OWNERS': 181, 'MANAGE_SOUND_TRIGGER': 182, 'MANAGE_USB': 183, 'MANAGE_USERS': 184, 'MANAGE_VOICE_KEYPHRASES': 185, 'MASTER_CLEAR': 186, 'MEDIA_CONTENT_CONTROL': 187, 'MODIFY_APPWIDGET_BIND_PERMISSIONS': 188, 'MODIFY_AUDIO_ROUTING': 189, 'MODIFY_AUDIO_SETTINGS': 190, 'MODIFY_CELL_BROADCASTS': 191, 'MODIFY_DAY_NIGHT_MODE': 192, 'MODIFY_NETWORK_ACCOUNTING': 193, 'MODIFY_PARENTAL_CONTROLS': 194, 'MODIFY_PHONE_STATE': 195, 'MOUNT_FORMAT_FILESYSTEMS': 196, 'MOUNT_UNMOUNT_FILESYSTEMS': 197, 'MOVE_PACKAGE': 198, 'NET_ADMIN': 199, 'NET_TUNNELING': 200, 'NFC': 201, 'NFC_HANDOVER_STATUS': 202, 'NOTIFY_PENDING_SYSTEM_UPDATE': 203, 'OBSERVE_GRANT_REVOKE_PERMISSIONS': 204, 'OEM_UNLOCK_STATE': 205, 'OVERRIDE_WIFI_CONFIG': 206, 'PACKAGE_USAGE_STATS': 207, 'PACKAGE_VERIFICATION_AGENT': 208, 'PACKET_KEEPALIVE_OFFLOAD': 209, 'PEERS_MAC_ADDRESS': 210, 'PERFORM_CDMA_PROVISIONING': 211, 'PERFORM_SIM_ACTIVATION': 212, 'PERSISTENT_ACTIVITY': 213, 'PROCESS_CALLLOG_INFO': 214, 'PROCESS_PHONE_ACCOUNT_REGISTRATION': 215, 'PROVIDE_TRUST_AGENT': 216, 'QUERY_DO_NOT_ASK_CREDENTIALS_ON_BOOT': 217, 'READ_BLOCKED_NUMBERS': 218, 'READ_DREAM_STATE': 219, 'READ_FRAME_BUFFER': 220, 'READ_INPUT_STATE': 221, 'READ_INSTALL_SESSIONS': 222, 'READ_LOGS': 223, 'READ_NETWORK_USAGE_HISTORY': 224, 'READ_OEM_UNLOCK_STATE': 225, 'READ_PRECISE_PHONE_STATE': 226, 'READ_PRIVILEGED_PHONE_STATE': 227, 'READ_PROFILE': 228, 'READ_SEARCH_INDEXABLES': 229, 'READ_SOCIAL_STREAM': 230, 'READ_SYNC_SETTINGS': 231, 'READ_SYNC_STATS': 232, 'READ_USER_DICTIONARY': 233, 'READ_WIFI_CREDENTIAL': 234, 'REAL_GET_TASKS': 235, 'REBOOT': 236, 'RECEIVE_BLUETOOTH_MAP': 237, 'RECEIVE_BOOT_COMPLETED': 238, 'RECEIVE_DATA_ACTIVITY_CHANGE': 239, 'RECEIVE_EMERGENCY_BROADCAST': 240, 'RECEIVE_MEDIA_RESOURCE_USAGE': 241, 'RECEIVE_STK_COMMANDS': 242, 'RECEIVE_WIFI_CREDENTIAL_CHANGE': 243, 'RECOVERY': 244, 'REGISTER_CALL_PROVIDER': 245, 'REGISTER_CONNECTION_MANAGER': 246, 'REGISTER_SIM_SUBSCRIPTION': 247, 'REGISTER_WINDOW_MANAGER_LISTENERS': 248, 'REMOTE_AUDIO_PLAYBACK': 249, 'REMOVE_DRM_CERTIFICATES': 250, 'REMOVE_TASKS': 251, 'REORDER_TASKS': 252, 'REQUEST_IGNORE_BATTERY_OPTIMIZATIONS': 253, 'REQUEST_INSTALL_PACKAGES': 254, 'RESET_FINGERPRINT_LOCKOUT': 255, 'RESET_SHORTCUT_MANAGER_THROTTLING': 256, 'RESTART_PACKAGES': 257, 'RETRIEVE_WINDOW_CONTENT': 258, 'RETRIEVE_WINDOW_TOKEN': 259, 'REVOKE_RUNTIME_PERMISSIONS': 260, 'SCORE_NETWORKS': 261, 'SEND_CALL_LOG_CHANGE': 262, 'SEND_DOWNLOAD_COMPLETED_INTENTS': 263, 'SEND_RESPOND_VIA_MESSAGE': 264, 'SEND_SMS_NO_CONFIRMATION': 265, 'SERIAL_PORT': 266, 'SET_ACTIVITY_WATCHER': 267, 'SET_ALWAYS_FINISH': 268, 'SET_ANIMATION_SCALE': 269, 'SET_DEBUG_APP': 270, 'SET_INPUT_CALIBRATION': 271, 'SET_KEYBOARD_LAYOUT': 272, 'SET_ORIENTATION': 273, 'SET_POINTER_SPEED': 274, 'SET_PREFERRED_APPLICATIONS': 275, 'SET_PROCESS_LIMIT': 276, 'SET_SCREEN_COMPATIBILITY': 277, 'SET_TIME': 278, 'SET_TIME_ZONE': 279, 'SET_WALLPAPER': 280, 'SET_WALLPAPER_COMPONENT': 281, 'SET_WALLPAPER_HINTS': 282, 'SHUTDOWN': 283, 'SIGNAL_PERSISTENT_PROCESSES': 284, 'START_ANY_ACTIVITY': 285, 'START_PRINT_SERVICE_CONFIG_ACTIVITY': 286, 'START_TASKS_FROM_RECENTS': 287, 'STATUS_BAR': 288, 'STATUS_BAR_SERVICE': 289, 'STOP_APP_SWITCHES': 290, 'STORAGE_INTERNAL': 291, 'SUBSCRIBED_FEEDS_READ': 292, 'SUBSCRIBED_FEEDS_WRITE': 293, 'SUBSTITUTE_NOTIFICATION_APP_NAME': 294, 'SYSTEM_ALERT_WINDOW': 295, 'TABLET_MODE': 296, 'TEMPORARY_ENABLE_ACCESSIBILITY': 297, 'TETHER_PRIVILEGED': 298, 'TRANSMIT_IR': 299, 'TRUST_LISTENER': 300, 'TV_INPUT_HARDWARE': 301, 'TV_VIRTUAL_REMOTE_CONTROLLER': 302, 'UPDATE_APP_OPS_STATS': 303, 'UPDATE_CONFIG': 304, 'UPDATE_DEVICE_STATS': 305, 'UPDATE_LOCK': 306, 'UPDATE_LOCK_TASK_PACKAGES': 307, 'USER_ACTIVITY': 308, 'USE_CREDENTIALS': 309, 'VIBRATE': 310, 'WAKE_LOCK': 311, 'WRITE_APN_SETTINGS': 312, 'WRITE_BLOCKED_NUMBERS': 313, 'WRITE_DREAM_STATE': 314, 'WRITE_GSERVICES': 315, 'WRITE_MEDIA_STORAGE': 316, 'WRITE_PROFILE': 317, 'WRITE_SECURE_SETTINGS': 318, 'WRITE_SETTINGS': 319, 'WRITE_SMS': 320, 'WRITE_SOCIAL_STREAM': 321, 'WRITE_SYNC_SETTINGS': 322, 'WRITE_USER_DICTIONARY': 323, 'ACCESS': 323, 'ACCESS_ASSISTED_GPS': 324, 'ACCESS_CELL_ID': 325, 'ACCESS_COARSE_LOCATION': 326, 'ACCESS_COARSE_UPDATES': 327, 'ACCESS_DRM': 328, 'ACCESS_FINE_LOCATION': 329, 'ACCESS_GPS': 330, 'ACCESS_INTENTS': 331, 'ACCESS_KUGOU_SERVICE': 332, 'ACCESS_LOCATION': 333, 'ACCESS_LOCATTON_MOCK_LOCATION': 334, 'ACCES_MOCK_LOCATION': 335, 'ACTION_IMAGE_CAPTURE': 336, 'ADD_SYSTEM_SERVICE': 337, 'BILLING': 338, 'BOOT_COMPLETED': 339, 'BROADCAST_PACKAGE_ADDED': 340, 'C2D_MESSAGE': 341, 'CALL_PHONE': 342, 'CAMERA': 343, 'CENTRAL_SERVICE_PERMISSION': 344, 'CHECK_LICENSE': 345, 'FULLSCREEN': 346, 'FULL_SCREEN': 347, 'GET_ACCOUNTS': 348, 'GOOGLE_AUTH': 349, 'INSTALL_DRM': 350, 'INSTALL_SHORTCUT': 351, 'LISTEN_CALL_STATE': 352, 'LOCATION': 353, 'NEW_OUTGOING_CALL': 354, 'PERMISSION': 355, 'PERMISSION_NAME': 356, 'PLUGIN': 357, 'PROCESS_CALL': 358, 'PROCESS_INCOMING_CALLS': 359, 'PROCESS_OUTGOING_CALLS': 360, 'RAISED_THREAD_PRIORITY': 361, 'READ_CALENDAR': 362, 'READ_CONTACTS': 363, 'READ_EXTERNAL_STORAGE': 364, 'READ_GMAIL': 365, 'READ_GSERVICES': 366, 'READ_HISTORY_BOOKMARKS': 367, 'READ_MMS': 368, 'READ_OWNER_DATA': 369, 'READ_PERMISSION': 370, 'READ_PHONE_STAT': 371, 'READ_PHONE_STATE': 372, 'READ_SECURE_SETTINGS': 373, 'READ_SETTINGS': 374, 'READ_SMS': 375, 'READ_WRITE': 376, 'RECEIVE': 377, 'RECEIVE_BOOT_CPMPLETED': 378, 'RECEIVE_MMS': 379, 'RECEIVE_SMS': 380, 'RECEIVE_WAP_PUSH': 381, 'RECORD_AUDIO': 382, 'RECORD_VIDEO': 383, 'SEND_SMS': 384, 'SET_ALARM': 385, 'UNINSTALL_SHORTCUT': 386, 'WIFI_LOCK': 387, 'WRITE_CALENDAR': 388, 'WRITE_CONTACTS': 389, 'WRITE_EXTERNAL_STORAGE': 390, 'WRITE_GMAIL': 391, 'WRITE_HISTORY_BOOKMARKS': 392, 'WRITE_OWNER_DATA': 393, 'WRITE_OWNER_FILE': 394, 'WRITE_PERMISSION': 395, 'WRITE_SECURE': 396}
map_num = {'0_apps': 0, 'AccuTrack': 1, 'Ackposts': 2, 'Acnetdoor': 3, 'Adrd': 4, 'Adsms': 5, 'Aks': 6, 'Ansca': 7, 'Antares': 8, 'Anti': 9, 'Anudow': 10, 'Arspam': 11, 'BaseBridge': 12, 'BeanBot': 13, 'Bgserv': 14, 'Biige': 15, 'Booster': 16, 'Bosm': 17, 'Boxer': 18, 'Cawitt': 19, 'CellShark': 20, 'CellSpy': 21, 'Ceshark': 22, 'CgFinder': 23, 'Coogos': 24, 'Copycat': 25, 'Cosha': 26, 'CrWind': 27, 'Dabom': 28, 'Dialer': 29, 'Dogowar': 30, 'Dougalek': 31, 'DroidDream': 32, 'DroidKungFu': 33, 'DroidRooter': 34, 'DroidSheep': 35, 'EICAR-Test-File': 36, 'EWalls': 37, 'Exploit.RageCage': 38, 'ExploitLinuxLotoor': 39, 'Faceniff': 40, 'FakeDoc': 41, 'FakeFlash': 42, 'FakeInstaller': 43, 'Fakelogo': 44, 'FakeNefix': 45, 'Fakengry': 46, 'FakePlayer': 47, 'FakeRun': 48, 'FakeTimer': 49, 'Fakeview': 50, 'FarMap': 51, 'Fatakr': 52, 'Fauxcopy': 53, 'Fidall': 54, 'FinSpy': 55, 'Fjcon': 56, 'Flexispy': 57, 'FoCobers': 58, 'Foncy': 59, 'Fsm': 60, 'Fujacks': 61, 'Gamex': 62, 'Gapev': 63, 'Gappusin': 64, 'Gasms': 65, 'Geinimi': 66, 'Generic': 67, 'GGtrack': 68, 'GinMaster': 69, 'GlodEagl': 70, 'Glodream': 71, 'Gmuse': 72, 'Gonca': 73, 'GPSpy': 74, 'Hamob': 75, 'Hispo': 76, 'Iconosys': 77, 'Imlog': 78, 'Jifake': 79, 'JS': 80, 'Exploit-DynSrc': 81, 'JSmsHider': 82, 'Kidlogger': 83, 'Kiser': 84, 'Kmin': 85, 'Koomer': 86, 'Ksapp': 87, 'Lemon': 88, 'LifeMon': 89, 'Loicdos': 90, 'Loozfon': 91, 'Luckycat': 92, 'Lypro': 93, 'Maistealer': 94, 'Mania': 95, 'Maxit': 96, 'MMarketPay': 97, 'Mobilespy': 98, 'MobileTx': 99, 'Mobinauten': 100, 'Mobsquz': 101, 'Moghava': 102, 'MTracker': 103, 'Nandrobox': 104, 'Netisend': 105, 'Nickspy': 106, 'NickyRCP': 107, 'Nisev': 108, 'Nyleaker': 109, 'Opfake': 110, 'PdaSpy': 111, 'Penetho': 112, 'Pirater': 113, 'Pirates': 114, 'PJApps': 115, 'Placms': 116, 'Plankton': 117, 'Proreso': 118, 'Qicsom': 119, 'QPlus': 120, 'Raden': 121, 'RATC': 122, 'RediAssi': 123, 'Replicator': 124, 'Rooter': 125, 'RootSmart': 126, 'RuFraud': 127, 'SafeKidZone': 128, 'Saiva': 129, 'Sakezon': 130, 'Sdisp': 131, 'SeaWeth': 132, 'SendPay': 133, 'SerBG': 134, 'SheriDroid': 135, 'SmForw': 136, 'SMSBomber': 137, 'Smspacem': 138, 'SMSreg': 139, 'SMSSend': 140, 'SmsSpy': 141, 'SmsWatcher': 142, 'SMSZombie': 143, 'Sonus': 144, 'Spitmo': 145, 'Spy.GoneSixty': 146, 'Spy.ImLog': 147, 'SpyBubble': 148, 'SpyHasb': 149, 'SpyMob': 150, 'Spyoo': 151, 'SpyPhone': 152, 'Spyset': 153, 'Ssmsp': 154, 'Stealer': 155, 'Stealthcell': 156, 'Steek': 157, 'Stiniter': 158, 'SuBatt': 159, 'Tapsnake': 160, 'Tesbo': 161, 'TheftAware': 162, 'TigerBot': 163, 'Trackplus': 164, 'TrojanSMS.Boxer.AQ': 165, 'TrojanSMS.Denofow': 166, 'TrojanSMS.Hippo': 167, 'TrojanSMS.Stealer': 168, 'Typstu': 169, 'Updtbot': 170, 'UpdtKiller': 171, 'Vdloader': 172, 'Vidro': 173, 'Whapsni': 174, 'Xsider': 175, 'YcChar': 176, 'Yzhc': 177, 'Zitmo': 178, 'Zsone': 179}
global file_size, UNI_VALUE, MAX_SERVICE



def make_feature(list_data):
	perm_dict = dict()
	for i in range(len(list_data)):
		perm_dict[list_data[i]] = i

	return perm_dict

def make_service_as_feature(services):
	global MAX_SERVICE
	if (services) > MAX_SERVICE:
		MAX_SERVICE = (services)

	return (services)/MAX_SERVICE

def convert2decimal(str):
	values = 0
	for c in str:
		values += ord(c)

	return values

# [permissions], file_size, is_use_nativelibc, is_declare_new_permission, percentofservice
def calculate_decimal_form(list_of_features, name, label, apk):
	dataset = list()
	#Make default
	dataset.append(map_num[label])
	for idx in range(len(permision_feature)):
		dataset.append(0)

	for feature in (list_of_features):
		feat = feature.split(".")[-1]
		try:
			dataset[permision_feature[feat]] = 1
		except Exception as ex:
			print("[Error] - {}\nCan not file this feature".format(feat))

	# add file size as a feature
	global file_size
	dataset.append(file_size/ (1024*1024*1024) )

	# add is_use_nativelib as a feature
	is_use_nativelib = len(apk.get_libraries())

	if is_use_nativelib == 0:
		dataset.append(0)
	else:
		dataset.append(is_use_nativelib/is_use_nativelib)

	#add is Declare new permission as a feature
	is_declare_new_feature = len(apk.get_declared_permissions())
	if is_declare_new_feature == 0:
		dataset.append(0)
	else:
		dataset.append(is_declare_new_feature/is_declare_new_feature)

	# add percent of service as a rate
	list_of_services = len(apk.get_services())
	if list_of_services == 0:
		dataset.append(0)
	else:
		rate_of_service = make_service_as_feature(list_of_services)
		dataset.append(rate_of_service)

	# count appear feature per samples
	total_feature = len(dataset) -1 
	count_feature = 0
	for e in dataset:
		if e != 0:
			count_feature += 1

	dataset.append(count_feature/total_feature)

	str_dataset = [str(e) for e in dataset]
	if (is_use_nativelib or is_declare_new_feature or list_of_services):
		with open("noted_special_features", "a+") as f:
			f.write("Nativelib: {}\nDeclare new feature: {}\nServices: {}\n\tPath: {}\n\n".format(is_use_nativelib, is_declare_new_feature, list_of_services, name))
	# print(dataset)

	with open("./info.txt", "a+") as f:
		f.write("\n===== {} =======".format(label))
		f.write("\n\tNumber of column: {}".format(len(dataset)))
		f.write("\n\tNumber of permission: {}".format(len(permision_feature)))
		f.write("\n\tNumber of services: {}".format(list_of_services))
		f.write("\n\tNumber of declared permission: {}".format(is_declare_new_feature))
		f.write("\n\tUse native libc: {}".format(is_use_nativelib))
		f.write("\n\tTotal features of sample: {}".format(total_feature))
		f.write("===============================\n")

	return dataset

def read_apk(path):
	apk = APK(path)

	return apk

def extract_feature(apk):
	perm = apk.get_permissions()
	path = apk.filename.split("\\")

	filename = path[-1]
	label = path[-2]
	filename = filename.split(".apk")[0]
	return perm, filename, label

def create_workbook(book_name, data):
	if ".csv" not in book_name:
		book_name = book_name.split(".")[0] + ".csv"
	
	# workbook = xlsxwriter.Workbook(book_name)
	# worksheet = workbook.add_worksheet()


	# for row in range(len(data)):
	# 	for col in range(len(data[row])):
	# 		worksheet.write(row, col, data[row][col])
	# 	print("\t\t\t\t --- Wrote ---")
	# 	print(data[row])


	# workbook.close()

	with open(book_name, 'a+', newline='\n') as csvfile:
		csvwriter = csv.writer(csvfile, delimiter=',',
	                            quotechar='|', quoting=csv.QUOTE_MINIMAL)
		for row in data:
			csvwriter.writerow(row)
	# with open(book_name, "a+") as f:
	# 	for row in data:
	# 		f.write(', '.join(row))
	# 		f.write('\n')
	return book_name

def get_perm(apk):
	p = list()
	for el in apk.get_permissions():
		x = el.split(".")[-1]
		p.append(x)
	return p


def main():
	datasets = list()
	for root, dirs, files in os.walk(path):
		#print(root, dirs, files)
		for file in files:
			full_path = os.path.join(root, file)
			print(full_path)
			if ".apk" in file:
				try:
					target = read_apk(full_path)
					global file_size
					file_size = os.path.getsize(full_path)
					perm, name, label = extract_feature(target)
					datasets.append( calculate_decimal_form(perm, name, label, target) )

					print("[LOG] - Extracted successfull - {}".format(file))
				except Exception as ex:
					data = "[{}] - {}".format(file, ex)
					print(data)
					with open("log.txt", "a+", encoding='utf8') as f:
						f.writelines(data)
					pass

	create_workbook(output_name, datasets)
	return


if __name__ == '__main__':
	path = r"E:\AnhNLQ\Data"
	# path = r"C:\Users\cloud\Downloads\Quarantines\Malware Samples\feature_vectors"
	output_name = "full_features_v1"
	permision_feature = full_features

	global file_size, UNI_VALUE, MAX_SERVICE
	#Define default values
	UNI_VALUE = ord("Z")
	MAX_SERVICE = 100

	main()